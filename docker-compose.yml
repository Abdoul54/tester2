services:
    laravel.test:
        build:
            context: './vendor/laravel/sail/runtimes/8.4'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: 'sail-8.4/app'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - pgsql
            - redis
            - minio
            - rabbitmq
            - pgadmin
    pgsql:
        image: 'postgres:17'
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'sail-pgsql:/var/lib/postgresql/data'
            - './vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    minio:
        image: 'minio/minio:RELEASE.2024-01-16T16-07-38Z'
        ports:
            - '${FORWARD_MINIO_PORT:-9000}:9000'
            - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
        environment:
            MINIO_ROOT_USER: sail
            MINIO_ROOT_PASSWORD: password
        volumes:
            - 'sail-minio:/data'
        networks:
            - sail
        command: 'minio server /data --console-address ":8900"'
        healthcheck:
            test:
                - CMD
                - mc
                - ready
                - local
            retries: 3
            timeout: 5s
    
    # Service to create MinIO bucket automatically
    minio-create-bucket:
        image: 'minio/mc:latest'
        depends_on:
            minio:
                condition: service_healthy
        networks:
            - sail
        entrypoint: >
            /bin/sh -c "
            mc alias set myminio http://minio:9000 sail password &&
            if ! mc ls myminio/local > /dev/null 2>&1; then
                mc mb myminio/local &&
                mc policy set public myminio/local &&
                echo 'Bucket local created and set to public'
            else
                echo 'Bucket local already exists'
            fi
            "
    
    rabbitmq:
        image: 'rabbitmq:4-management'
        hostname: rabbitmq
        ports:
            - '${FORWARD_RABBITMQ_PORT:-5672}:5672'
            - '${FORWARD_RABBITMQ_DASHBOARD_PORT:-15672}:15672'
        environment:
            RABBITMQ_HOST: '%'
            RABBITMQ_USER: '${RABBITMQ_USER}'
            RABBITMQ_PASSWORD: '${RABBITMQ_PASSWORD}'
            RABBITMQ_VHOST: '${RABBITMQ_VHOST}'
            RABBITMQ_QUEUE: '${RABBITMQ_QUEUE}'
        volumes:
            - 'sail-rabbitmq:/var/lib/rabbitmq'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - rabbitmq-diagnostics
                - '-q'
                - ping
            retries: 3
            timeout: 5s
    
    pgadmin:
        image: 'dpage/pgadmin4:latest'
        ports:
            - '${FORWARD_PGADMIN_PORT:-8585}:80'
        environment:
            PGADMIN_DEFAULT_EMAIL: '${PGADMIN_EMAIL}'
            PGADMIN_DEFAULT_PASSWORD: '${PGADMIN_PASSWORD}'
            PGADMIN_CONFIG_SERVER_MODE: 'False'
        volumes:
            - 'sail-pgadmin:/var/lib/pgadmin'
        networks:
            - sail
        depends_on:
            - pgsql
networks:
    sail:
        driver: bridge
volumes:
    sail-pgsql:
        driver: local
    sail-redis:
        driver: local
    sail-minio:
        driver: local
    sail-rabbitmq:
        driver: local
    sail-pgadmin:
        driver: local